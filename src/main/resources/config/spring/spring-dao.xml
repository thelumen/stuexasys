<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 导入jdbc文件 -->
    <context:property-placeholder
            location="classpath:config/jdbc/jdbc.properties"/>

    <!-- dataSource 配置 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="name" value="${jdbc.dataSourceName}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="initialSize" value="5"/>
        <property name="minIdle" value="3"/>
        <property name="maxActive" value="30"/>

        <property name="maxWait" value="60000"/>

        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 1"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/>
        <property name="logAbandoned" value="true"/>

        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <property name="filters" value="stat"/>
    </bean>

    <!-- sqlsessionFactory -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation"
                  value="classpath:config/mybatis/SqlMapConfig.xml"/>
        <property name="mapperLocations"
                  value="classpath:mapper/*/*Mapper.xml"/>
        <!--<property name="configurationProperties">-->
        <!--<props>-->
        <!--&lt;!&ndash; 开启缓存&ndash;&gt;-->
        <!--<prop key="cacheEnabled">true</prop>-->
        <!--&lt;!&ndash; 查询时，关闭关联对象即时加载以提高性能 &ndash;&gt;-->
        <!--<prop key="lazyLoadingEnabled">false</prop>-->
        <!--&lt;!&ndash; 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指定)，不会加载关联表的所有字段，以提高性能 &ndash;&gt;-->
        <!--<prop key="aggressiveLazyLoading">true</prop>-->
        <!--&lt;!&ndash; 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 &ndash;&gt;-->
        <!--<prop key="multipleResultSetsEnabled">true</prop>-->
        <!--&lt;!&ndash; 允许使用列标签代替列名 &ndash;&gt;-->
        <!--<prop key="useColumnLabel">true</prop>-->
        <!--&lt;!&ndash; 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 &ndash;&gt;-->
        <!--<prop key="useGeneratedKeys">true</prop>-->
        <!--&lt;!&ndash; 给予被嵌套的resultMap以字段-属性的映射支持 &ndash;&gt;-->
        <!--<prop key="autoMappingBehavior">FULL</prop>-->
        <!--&lt;!&ndash; 对于批量更新操作缓存SQL以提高性能 &ndash;&gt;-->
        <!--<prop key="defaultExecutorType">BATCH</prop>-->
        <!--&lt;!&ndash; 数据库超过秒仍未响应则超时 &ndash;&gt;-->
        <!--<prop key="defaultStatementTimeout">300</prop>-->
        <!--</props>-->
        <!--</property>-->
    </bean>

    <!--自动扫描mapper接口，并注入sqlsession-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="yang.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

</beans>